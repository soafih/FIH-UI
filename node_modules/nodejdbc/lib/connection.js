// Generated by CoffeeScript 1.9.3
(function() {
  var CallableStatement, Connection, PreparedStatement, Promise, Statement;

  Statement = require('./statement');

  CallableStatement = require('./callablestatement');

  PreparedStatement = require('./preparedstatement');

  Promise = require('bluebird');

  module.exports = Connection = (function() {
    function Connection(connection) {
      this.connection = Promise.promisifyAll(connection);
    }

    Connection.prototype.setAutoCommit = function(autoCommit) {
      return this.connection.setAutoCommitSync(autoCommit);
    };

    Connection.prototype.createStatement = function() {
      return this.connection.createStatementAsync().then(function(statement) {
        return new Statement(statement);
      });
    };

    Connection.prototype.prepareStatement = function(sql) {
      return this.connection.prepareStatementAsync(sql).then(function(preparedStatement) {
        return new PreparedStatement(preparedStatement);
      });
    };

    Connection.prototype.prepareCall = function(call) {
      return this.connection.prepareCallAsync(call).then(function(callableStatement) {
        return new CallableStatement(callableStatement);
      });
    };

    Connection.prototype.commit = function() {
      return this.connection.commitAsync();
    };

    Connection.prototype.rollback = function() {
      return this.connection.rollbackAsync();
    };

    Connection.prototype.close = function() {
      return this.connection.closeAsync();
    };

    Connection.prototype.isClosed = function() {
      return this.connection.isClosedSync();
    };

    Connection.prototype.isValid = function(timeout) {
      return this.connection.isValidSync(timeout);
    };

    return Connection;

  })();

}).call(this);
